import jsPDF from "jspdf";
import React, { useRef, useState } from "react";
import HTMLFlipBook from "react-pageflip";
import { images } from "../assets/images";

const projects = [
  {
    title: "Vtruy·ªán",
    description:
      "N·ªÅn t·∫£ng ƒë·ªçc truy·ªán tranh tr·ª±c tuy·∫øn v·ªõi h∆°n 10,000+ t√°c ph·∫©m. T√≠ch h·ª£p t√≠nh nƒÉng ƒë·ªçc offline, bookmark v√† theo d√µi truy·ªán y√™u th√≠ch. H·ªó tr·ª£ ƒëa n·ªÅn t·∫£ng v·ªõi giao di·ªán th√¢n thi·ªán.",
    image: images.image1,
    tags: ["React", "Node.js", "MongoDB"],
    features: [
      "ƒê·ªçc offline",
      "Bookmark",
      "Theo d√µi truy·ªán",
      "T√¨m ki·∫øm n√¢ng cao",
    ],
    stats: "10,000+ t√°c ph·∫©m, 50,000+ ng∆∞·ªùi d√πng h√†ng th√°ng",
  },
  {
    title: "Family Voice",
    description:
      "·ª®ng d·ª•ng k·∫øt n·ªëi gia ƒë√¨nh qua tin nh·∫Øn tho·∫°i v√† h√¨nh ·∫£nh. T√≠ch h·ª£p album ·∫£nh gia ƒë√¨nh, chia s·∫ª kho·∫£nh kh·∫Øc v√† t·∫°o nh·∫≠t k√Ω chung. B·∫£o m·∫≠t cao v·ªõi x√°c th·ª±c hai l·ªõp.",
    image: images.image2,
    tags: ["React", "Firebase", "Cloud Storage"],
    features: ["Chat nh√≥m", "Album ·∫£nh", "Nh·∫≠t k√Ω", "Th√¥ng b√°o"],
    stats: "20,000+ gia ƒë√¨nh ƒëang s·ª≠ d·ª•ng",
  },
  {
    title: "Movies VMS",
    description:
      "H·ªá th·ªëng qu·∫£n l√Ω r·∫°p chi·∫øu phim hi·ªán ƒë·∫°i v·ªõi t√≠nh nƒÉng ƒë·∫∑t v√© tr·ª±c tuy·∫øn, qu·∫£n l√Ω su·∫•t chi·∫øu v√† th·ªëng k√™ doanh thu. T√≠ch h·ª£p thanh to√°n ƒëi·ªán t·ª≠ v√† h·ªá th·ªëng khuy·∫øn m√£i.",
    image: images.image3,
    tags: ["Vue", "MongoDB", "Express"],
    features: ["ƒê·∫∑t v√© online", "Qu·∫£n l√Ω su·∫•t chi·∫øu", "B√°o c√°o doanh thu"],
    stats: "Ph·ª•c v·ª• 5 c·ª•m r·∫°p l·ªõn",
  },
  {
    title: "IniStory",
    description:
      "N·ªÅn t·∫£ng s√°ng t·∫°o v√† chia s·∫ª truy·ªán t∆∞∆°ng t√°c. Ng∆∞·ªùi d√πng c√≥ th·ªÉ t·∫°o c√°c c√¢u chuy·ªán v·ªõi nhi·ªÅu nh√°nh k·∫øt th√∫c kh√°c nhau. H·ªó tr·ª£ t√≠ch h·ª£p h√¨nh ·∫£nh v√† √¢m thanh.",
    image: images.image5,
    tags: ["Vue", "MongoDB", "AWS"],
    features: ["T·∫°o truy·ªán t∆∞∆°ng t√°c", "Th∆∞ vi·ªán media", "Th·ªëng k√™ t∆∞∆°ng t√°c"],
    stats: "1,000+ t√°c gi·∫£ ho·∫°t ƒë·ªông",
  },
  {
    title: "IniStory App",
    description:
      "·ª®ng d·ª•ng di ƒë·ªông cho n·ªÅn t·∫£ng IniStory v·ªõi tr·∫£i nghi·ªám ƒë·ªçc truy·ªán m∆∞·ª£t m√† tr√™n thi·∫øt b·ªã di ƒë·ªông. H·ªó tr·ª£ ƒë·ªçc offline v√† ƒë·ªìng b·ªô d·ªØ li·ªáu ƒëa thi·∫øt b·ªã.",
    image: images.image6,
    tags: ["Vue Native", "MongoDB", "React Native"],
    features: ["ƒê·ªçc offline", "ƒê·ªìng b·ªô ƒëa thi·∫øt b·ªã", "T√πy ch·ªânh giao di·ªán"],
    stats: "100,000+ l∆∞·ª£t t·∫£i v·ªÅ",
  },
];

// T·∫°o component Page ri√™ng cho t·ª´ng trang
const Page = React.forwardRef((props, ref) => {
  return (
    <div className="page-wrapper" ref={ref}>
      <div className="page">
        <div className="page-content">
          <div className="gradient-background"></div>
          <div className="project-container">
            <div className="project-image-container">
              <img
                src={props.project.image}
                alt={props.project.title}
                className="project-image"
              />
            </div>
            <div className="project-details">
              <h3 className="project-title">{props.project.title}</h3>
              <p className="project-description">{props.project.description}</p>
              <div className="features-list">
                <h4>T√≠nh nƒÉng ch√≠nh:</h4>
                <ul>
                  {props.project.features.map((feature, idx) => (
                    <li key={idx}>{feature}</li>
                  ))}
                </ul>
              </div>
              <div className="project-stats">
                <strong>Th·ªëng k√™: </strong>
                {props.project.stats}
              </div>
              <div className="tags-container">
                {props.project.tags.map((tag, idx) => (
                  <span key={idx} className="tag">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
            <div className="page-number">{props.number}</div>
          </div>
        </div>
      </div>
    </div>
  );
});

export default function Portfolio() {
  const [search, setSearch] = useState("");
  const bookRef = useRef();

  const filteredProjects = projects.filter(
    (p) =>
      p.title.toLowerCase().includes(search.toLowerCase()) ||
      p.tags.some((tag) => tag.toLowerCase().includes(search.toLowerCase()))
  );

  const exportPDF = () => {
    const doc = new jsPDF();
    doc.setFontSize(20);
    doc.text("My Project Portfolio", 10, 20);

    filteredProjects.forEach((p, index) => {
      const yPos = 40 + index * 30;
      doc.setFontSize(16);
      doc.text(`${index + 1}. ${p.title}`, 10, yPos);
      doc.setFontSize(12);
      doc.text(p.description, 10, yPos + 10);
      doc.text(`Tags: ${p.tags.join(", ")}`, 10, yPos + 20);
    });
    doc.save("portfolio.pdf");
  };

  return (
    <div className="container">
      <div className="inner-container">
        <div className="fixed-controls">
          <button
            onClick={() => bookRef.current.pageFlip().flipPrev()}
            className="control-button"
          >
            ‚Üê
          </button>
          <button
            onClick={() => bookRef.current.pageFlip().flipNext()}
            className="control-button"
          >
            ‚Üí
          </button>
          <input
            placeholder="T√¨m ki·∫øm..."
            value={search}
            onChange={(e) => setSearch(e.target.value)}
            className="search-input"
          />
          <button className="control-button" onClick={exportPDF}>
            üìë
          </button>
        </div>
        <div className="book-container">
          <HTMLFlipBook
            width={700}
            height={1000}
            size="stretch"
            showCover={false}
            mobileScrollSupport={true}
            className="book-container"
            ref={bookRef}
            style={{
              boxShadow: "0 15px 40px rgba(0,0,0,0.2)",
              borderRadius: "10px",
              background: "#e6e7e8",
            }}
            flippingTime={800}
            usePortrait={true}
            startPage={0}
            drawShadow={true}
            useMouseEvents={true}
            renderOnlyPageLengths={true}
            swipeDistance={0}
            showPageCorners={true}
            disableFlipByClick={false}
            maxShadowOpacity={0.7}
            autoSize={true}
            clickEventForward={true}
            onFlip={(e) => {
              const pages = document.querySelectorAll(".page");
              pages.forEach((page) => {
                page.classList.remove("--turning");
              });
              if (e.data) {
                const currentPage = pages[e.data];
                if (currentPage) {
                  currentPage.classList.add("--turning");
                }
              }
            }}
          >
            <div
              className="company-info"
              style={{
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
                textAlign: "center",
                height: "100%",
                width: "100%",
              }}
            >
              <div style={{ position: "absolute", top: "40%", left: "20%" }}>
                <h1>C√¥ng ty c·ªï ph·∫ßn INISOFT</h1>
                <p>Chuy√™n cung c·∫•p c√°c gi·∫£i ph√°p ph·∫ßn m·ªÅm</p>
              </div>
            </div>
            {filteredProjects.map((project, index) => (
              <Page key={index} project={project} number={`${index + 1}`} />
            ))}
          </HTMLFlipBook>
        </div>
      </div>
    </div>
  );
}
